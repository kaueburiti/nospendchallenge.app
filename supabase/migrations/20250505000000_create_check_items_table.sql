-- Create check_items table
create table public.check_items (
    id bigint generated by default as identity primary key,
    check_id bigint not null references public.checks(id) on delete cascade,
    title text not null,
    price numeric(10, 2) not null,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Enable RLS
alter table public.check_items enable row level security;

-- Allow authenticated users to read check_items
create policy "Users can read check_items"
on public.check_items for select
to authenticated
using (
    check_id in (
        select id from public.checks
        where user_id = auth.uid()
    )
);

-- Allow users to insert their own check_items
create policy "Users can insert their own check_items"
on public.check_items for insert
to authenticated
with check (
    check_id in (
        select id from public.checks
        where user_id = auth.uid()
    )
);

-- Allow users to delete their own check_items
create policy "Users can delete their own check_items"
on public.check_items for delete
to authenticated
using (
    check_id in (
        select id from public.checks
        where user_id = auth.uid()
    )
);

-- Create function to update check spent_amount based on check_items
create or replace function update_check_spent_amount()
returns trigger as $$
begin
    -- Update the check's spent_amount to the sum of all its items
    update public.checks
    set spent_amount = (
        select coalesce(sum(price), 0)
        from public.check_items
        where check_id = NEW.check_id
    )
    where id = NEW.check_id;
    
    return NEW;
end;
$$ language plpgsql;

-- Create trigger to update check spent_amount whenever check_items are modified
create trigger update_check_spent_amount_trigger
after insert or update or delete on public.check_items
for each row execute function update_check_spent_amount();

-- Comment on table and columns
comment on table public.check_items is 'Items purchased during an impulse buying episode';
comment on column public.check_items.title is 'Title/name of the purchased item';
comment on column public.check_items.price is 'Price of the purchased item'; 