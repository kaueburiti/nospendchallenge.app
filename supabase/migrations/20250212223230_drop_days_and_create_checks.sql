-- Drop existing days-related objects
drop trigger if exists on_challenge_created on public.challenges;
drop function if exists public.generate_challenge_days();
drop table if exists public.days;
drop type if exists day_status;

-- Create checks table
create table public.checks (
    id bigint generated by default as identity primary key,
    date date not null,
    challenge_id bigint not null references public.challenges(id) on delete cascade,
    user_id uuid not null references auth.users(id) on delete cascade,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    unique(date, challenge_id, user_id)
);

-- Enable RLS
alter table public.checks enable row level security;

-- Allow authenticated users to read checks
create policy "Users can read checks"
on public.checks for select
to authenticated
using (true);

-- Allow users to insert their own checks
create policy "Users can insert their own checks"
on public.checks for insert
to authenticated
with check (
    user_id = auth.uid() and
    challenge_id in (
        select id from public.challenges
        where owner_id = auth.uid()
    )
);

-- Allow users to delete their own checks
create policy "Users can delete their own checks"
on public.checks for delete
to authenticated
using (user_id = auth.uid());